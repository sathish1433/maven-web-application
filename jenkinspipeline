pipeline{

agent any

tools{
maven 'maven3.9.9'
}

triggers {
  pollSCM '* * * * *'
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '1', numToKeepStr: '5')
  timestamps()
}


stages{
	  //fetch the github code
	  stage('git checkout'){
	  steps{
	    git credentialsId: '8c8c5e46-ae4d-4f81-ad28-6c200d3fbefb', url: 'https://github.com/sathishyadava143/maven-web-application.git'
	  }
	  }
	  
	//build stage
	stage('maven build'){
	steps{
	sh "mvn clean package"
	}
	}
/*
	//check code quality
	stage('code quality'){
	  steps{
	    sh "mvn clean sonar:sonar"
	  }
	}
	//push to artifactory
	stage('code push'){
	  steps{
	    sh "mvn clean deploy"
	  }
	}
	//war file to deploy on tomcat server
	stage('Deployment'){
	  steps{
	    sshagent(['4737f250-498f-45fd-821a-5731cc39999c']) {
   	    sh "scp -o StrictHostKeyChecking=no target/*.war ec2-user@13.232.96.144:/opt/apache-tomcat-9.0.94/webapps/"
            }
	  }
	}
*/	
}
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
}
